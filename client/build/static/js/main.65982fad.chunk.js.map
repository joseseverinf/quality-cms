{"version":3,"sources":["components/context/user-context.js","components/home/images/Logo.png","components/login/main.js","components/home/dashboard.js","components/clientes/list.js","components/clientes/admin.js","components/login/login.js","components/login/register.js","components/home/footer.js","components/home/topheader.js","components/estufas/list.js","components/estufas/admin.js","components/ventas/list.js","components/ventas/admin.js","components/mantenimientos/list.js","components/mantenimientos/admin.js","components/home/home.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","createContext","Main","props","navigate","useNavigate","_jsx","Container","className","children","_jsxs","Row","Col","xs","sm","md","lg","src","Logo","width","alt","Button","color","size","onClick","e","style","marginRight","marginTop","ClienteDashboard","_Fragment","fluid","Link","to","ImUsers","fontSize","textAlign","MdFireplace","RiMoneyDollarCircleLine","FiSettings","tableIcons","Add","forwardRef","ref","AddBoxIcon","_objectSpread","sx","Check","CheckIcon","Clear","ClearIcon","Delete","DeleteOutlineIcon","DetailPanel","ChevronRightIcon","Edit","EditIcon","Export","SaveAltIcon","Filter","FilterListIcon","FirstPage","FirstPageIcon","LastPage","LastPageIcon","NextPage","PreviousPage","ChevronLeftIcon","ResetSearch","Search","SearchIcon","SortArrow","ArrowUpwardIcon","ThirdStateCheck","RemoveIcon","ViewColumn","ViewColumnIcon","ClienteList","_useState","useState","_useState2","_slicedToArray","clientes","setClientes","_useState3","_useState4","actualizar","setActualizar","validEmail","useEffect","axios","get","then","resp","data","catch","error","Swal","fire","message","_useState5","title","field","hidden","filtering","editComponent","TextField","id","label","variant","value","onChange","target","helperText","validate","rowData","firstName","length","isValid","lastName","rut","email","test","phone","type","_useState6","columns","MaterialTable","icons","localization","toolbar","exportTitle","searchTooltip","searchPlaceholder","showColumnsTitle","header","actions","body","addTooltip","editTooltip","deleteTooltip","editRow","deleteText","cancelTooltip","saveTooltip","emptyDataSourceMessage","pagination","labelRowsSelect","labelDisplayedRows","labelRowsPerPage","firstAriaLabel","firstTooltip","previousAriaLabel","previousTooltip","nextAriaLabel","nextTooltip","lastAriaLabel","lastTooltip","grouping","placeholder","groupedBy","options","addRowPosition","searchFieldAlignment","exportMenu","exportFunc","cols","datas","ExportPdf","ExportCsv","columnsButton","editable","onRowAdd","newData","Promise","resolve","reject","Object","keys","active","agreement","discount","post","console","log","ok","concat","_toConsumableArray","onRowUpdate","oldData","put","_id","dataUpdate","find","el","tableData","index","indexOf","onRowDelete","dataDelete","splice","icon","RefreshIcon","tooltip","isFreeAction","VisibilityIcon","event","html","focusConfirm","focusCancel","customClass","container","popup","closeButton","image","content","confirmButton","cancelButton","footer","showClass","JSON","stringify","ClientesAdmin","BsHouseDoor","Routes","Route","path","element","initialState","username","password","LoginForm","inputs","setInputs","context","useContext","formUpdate","_e$target","name","_defineProperty","Form","onSubmit","preventDefault","login","FormGroup","Label","Input","required","maxLength","minLength","stopPropagation","AiOutlineForm","confirmPassword","RegisterForm","goHome","err","profile","BiLogInCircle","ClienteFooter","href","ClienteTop","Navbar","dark","expand","fixed","full","light","NavbarBrand","Collapse","navbar","user","NavbarText","logout","FiLogOut","EstufaList","estufas","setEstufas","stoveName","stoveBrand","stoveModel","stoveCode","defaultValue","currencySetting","locale","currencyCode","minimumFractionDigits","maximumFractionDigits","stoveUnitPrice","render","stoveImage","borderRadius","stoveColor","stoveOrigin","stoveAmount","stoveCharacteristic","EstufasAdmin","clookup","elookup","slookup","Efectivo","Crédito","Débito","Transferencia","vlookup","formaspago","VentasList","ventas","setVentas","_useState7","_useState8","_useState9","_useState10","reloadcolum","setReloadcolum","_lookup","forEach","toString","getName","info","cliente","getProduct","estufa","getSalePrice","precio","discountByClient","discountBySale","product","quantitie","_estufa","globalPrice","parseInt","client","_cliente","Math","round","useMemo","lookup","Autocomplete","getOptionLabel","option","renderInput","params","fullWidth","newValue","_rowData","onRowDataChange","_clientes","salePrice","paymentMethod","observations","VentasAdmin","Agendado","Realizado","Cancelado","status","MantenimientoList","mantenimientos","setMantenimientos","maintenanceStatus","technical","scheduledDate","MantenimientosAdmin","Home","SESSION_USER","setUser","sessionStorage","getItem","parse","Provider","setItem","clear","EstufaAdmin","MantenimientoAdmin","App","BrowserRouter","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65982fad.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst UserContext = createContext();\n\nexport default UserContext;","export default __webpack_public_path__ + \"static/media/Logo.ebe8e63c.png\";","import React from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { Container, Row, Col } from 'reactstrap';\nimport { Button } from 'reactstrap';\nimport Logo from '../home/images/Logo.png';\n\nconst Main = (props) => {\n\n    const navigate = useNavigate()\n\n    const goToRegister = (e) => {\n        navigate('/register');\n    }\n    const goToLogin = (e) => {\n        navigate('/login');\n    }\n\n    return (\n        <Container className=\"recuadro-reg-log\">\n            <Row>\n                <Col xs={12} sm={6} md={6} lg={6} className=\"espaciado2 alineacion\">\n                    <img src={Logo} width=\"300\" alt='logo'/>\n                    <h2>¡Bienvenido!</h2>\n                    <p>Si eres usuario nuevo, haz click en Registrarse</p>\n                    <p>Si ya posees una cuenta creada, haz click en Login</p>\n                </Col>\n                <Col xs={12} sm={6} md={6} lg={6} className=\"espaciado3 alineacion\">\n                    <Button color=\"success\" size=\"lg\" onClick={goToRegister} style={{ marginRight: '10px', marginTop: '100px'}}>Registrarse</Button>\n                    <Button color=\"primary\" size=\"lg\" onClick={goToLogin} style={{ marginTop: '100px'}}>Login</Button>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default Main;\n","import React from \"react\";\r\nimport Logo from \"./images/Logo.png\";\r\nimport { Container, Row, Col, Button } from \"reactstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ImUsers } from \"react-icons/im\";\r\nimport { MdFireplace } from \"react-icons/md\";\r\nimport { RiMoneyDollarCircleLine } from \"react-icons/ri\";\r\nimport { FiSettings } from \"react-icons/fi\";\r\nimport { FiLogOut } from \"react-icons/fi\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UserContext from '../context/user-context';\r\nimport { useContext } from 'react';\r\n\r\nconst ClienteDashboard = (props) => {\r\n  // const navigate = useNavigate();\r\n  // const context = useContext(UserContext);\r\n\r\n  // const logout = e => {\r\n  //     context.logout();\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <Container fluid className=\"espaciado recuadro-reg-log\">\r\n        {/* <Row>\r\n          <Col className=\"cs-logout\">\r\n              <Button color=\"primary\" size= \"md\" onClick={logout}>\r\n                <FiLogOut color=\"white\"\r\n                      style={{\r\n                        marginRight: \"10px\",\r\n                        fontSize: \"25\",\r\n                        textAlign: \"center\",\r\n                      }}/>Cerrar Sesión</Button>\r\n            </Col>\r\n       </Row> */}\r\n        <Row>\r\n          <Col xs={12} sm={12} md={12} lg={12} className=\"alineacion\">\r\n            <img src={Logo} width=\"200\" alt=\"logo\" />\r\n            <h3>Panel de Control de Quality Pellets NET</h3>\r\n            <p>\r\n              A continuación, selecciona uno de los módulos para visualizar lo\r\n              que necesites trabajar\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"espaciado3\">\r\n          <Col className=\"alineación textos-dash\" xs={6} sm={6} md={6} lg={3}>\r\n            <Link to={`../clientes/`}>\r\n              <ImUsers\r\n                color=\"blue\"\r\n                style={{\r\n                  marginRight: \"10px\",\r\n                  fontSize: \"100\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              />\r\n              <p>Nuestros Clientes</p>\r\n            </Link>\r\n          </Col>\r\n          <Col className=\"alineación textos-dash\" xs={6} sm={6} md={6} lg={3}>\r\n            <Link to={`../estufas/`}>\r\n              <MdFireplace\r\n                color=\"red\"\r\n                style={{\r\n                  marginRight: \"10px\",\r\n                  fontSize: \"100\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              />\r\n              <p>Estufas y Calderas</p>\r\n            </Link>\r\n          </Col>\r\n          <Col className=\"alineación textos-dash\" xs={6} sm={6} md={6} lg={3}>\r\n            <Link to={`../ventas/`}>\r\n              <RiMoneyDollarCircleLine\r\n                color=\"green\"\r\n                style={{\r\n                  marginRight: \"10px\",\r\n                  fontSize: \"100\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              />\r\n              <p>Ventas de Pellets y Estufas</p>\r\n            </Link>\r\n          </Col>\r\n          <Col className=\"alineación textos-dash\" xs={6} sm={6} md={6} lg={3}>\r\n            <Link to={`../mantenciones/`}>\r\n              <FiSettings\r\n                color=\"grey\"\r\n                style={{\r\n                  marginRight: \"10px\",\r\n                  fontSize: \"100\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              />\r\n              <p>Instalación y Mantenciones</p>\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClienteDashboard;\r\n","import { forwardRef, useEffect, useState } from 'react';\r\n\r\nimport axios from 'axios';\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport MaterialTable from '@material-table/core';\r\nimport { ExportCsv, ExportPdf } from '@material-table/exporters';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nimport AddBoxIcon from '@mui/icons-material/AddBox';\r\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\r\nimport LastPageIcon from '@mui/icons-material/LastPage';\r\nimport RemoveIcon from '@mui/icons-material/Remove';\r\nimport SaveAltIcon from '@mui/icons-material/SaveAlt';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport ViewColumnIcon from '@mui/icons-material/ViewColumn';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport RefreshIcon from '@mui/icons-material/Refresh';\r\nimport { TextField } from '@mui/material';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBoxIcon {...props} ref={ref} sx={{ fontSize: 30 }} />),\r\n    Check: forwardRef((props, ref) => <CheckIcon {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <ClearIcon {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutlineIcon {...props} ref={ref} color=\"error\" />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRightIcon {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <EditIcon {...props} ref={ref} color=\"primary\" />),\r\n    Export: forwardRef((props, ref) => <SaveAltIcon {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterListIcon {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPageIcon {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPageIcon {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRightIcon {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeftIcon {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <ClearIcon {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <SearchIcon {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpwardIcon {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <RemoveIcon {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumnIcon {...props} ref={ref} />),\r\n};\r\n\r\nconst ClienteList = () => {\r\n    const [clientes, setClientes] = useState([]);\r\n    const [actualizar, setActualizar] = useState(false);\r\n\r\n    const validEmail = /^([a-zA-Z0-9_.-])+@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\r\n\r\n    useEffect(() => {\r\n        axios.get('/api/clientes')\r\n            .then(resp => {\r\n                setClientes(resp.data.data)\r\n            })\r\n            .catch(error =>\r\n                Swal.fire('Error', error.message, 'error'));\r\n    }, [actualizar]);\r\n\r\n    const [columns, setColumns] = useState([\r\n        { title: 'Id', field: \"_id\", hidden: true, filtering: false },\r\n        {\r\n            title: 'Nombre',\r\n            field: 'firstName',\r\n            editComponent: props => (\r\n                <TextField\r\n                    id='firstName'\r\n                    label=\"Nombre\"\r\n                    variant=\"outlined\"\r\n                    value={props.value}\r\n                    onChange={e => props.onChange(e.target.value)}\r\n                    helperText={props.helperText}\r\n                    error={props.error}\r\n                />\r\n            ),\r\n            validate: rowData => rowData.firstName && (rowData.firstName.length < 3 || rowData.firstName.length > 50) ? { isValid: false, helperText: 'El Nombre debe tener más de 3 y menos de 50 caracteres.' } : true\r\n        },\r\n        {\r\n            title: 'Apellido',\r\n            field: 'lastName',\r\n            editComponent: props => (\r\n                <TextField\r\n                    id='lastName'\r\n                    label=\"Apellido\"\r\n                    variant=\"outlined\"\r\n                    value={props.value}\r\n                    onChange={e => props.onChange(e.target.value)}\r\n                    helperText={props.helperText}\r\n                    error={props.error}\r\n                />\r\n            ),\r\n            validate: rowData => rowData.lastName && (rowData.lastName.length < 3 || rowData.lastName.length > 50) ? { isValid: false, helperText: 'El Apellido debe tener más de 3 y menos de 50 caracteres.' } : true\r\n        },\r\n        {\r\n            title: 'Rut',\r\n            field: 'rut',\r\n            editComponent: props => (\r\n                <TextField\r\n                    id='rut'\r\n                    label=\"Rut\"\r\n                    variant=\"outlined\"\r\n                    value={props.value}\r\n                    onChange={e => props.onChange(e.target.value)}\r\n                    helperText={props.helperText}\r\n                    error={props.error}\r\n                />\r\n            ),\r\n            validate: rowData => rowData.rut && (rowData.rut.length < 8 || rowData.rut.length > 12) ? { isValid: false, helperText: 'El Rut debe tener más de 8 y menos de 12 caracteres.' } : true\r\n        },\r\n        {\r\n            title: 'Email',\r\n            field: 'email',\r\n            editComponent: props => (\r\n                <TextField\r\n                    id='email'\r\n                    label=\"Email\"\r\n                    variant=\"outlined\"\r\n                    value={props.value}\r\n                    onChange={e => props.onChange(e.target.value)}\r\n                    helperText={props.helperText}\r\n                    error={props.error}\r\n                />\r\n            ),\r\n            filtering: false, validate: rowData => rowData.email && !validEmail.test(rowData.email) ? { isValid: false, helperText: 'Ingrese un Email válido.' } : true\r\n        },\r\n        {\r\n            title: 'Teléfono',\r\n            field: 'phone',\r\n            filtering: false,\r\n            editComponent: props => (\r\n                <TextField\r\n                    id='phone'\r\n                    label=\"Teléfono\"\r\n                    variant=\"outlined\"\r\n                    value={props.value}\r\n                    onChange={e => props.onChange(e.target.value)}\r\n                    helperText={props.helperText}\r\n                    error={props.error}\r\n                />\r\n            ),\r\n            validate: rowData => rowData.phone && (rowData.phone.length < 8 || rowData.phone.length > 11) ? { isValid: false, helperText: 'El Teléfono debe tener más de 8 y menos de 12 caracteres.' } : true\r\n        },\r\n        { title: 'Convenio', field: 'agreement', type: 'boolean' },\r\n        {\r\n            title: 'Descuento %',\r\n            field: 'discount',\r\n            type: 'numeric',\r\n            editComponent: props => (\r\n                <TextField type=\"number\" id='discount' label=\"Descuento\" variant=\"outlined\" value={props.value} onChange={e => props.onChange(e.target.value)} />\r\n            ),\r\n            filtering: false\r\n        },\r\n        { title: 'Activo', field: 'active', hidden: true, filtering: false },\r\n    ]);\r\n\r\n    return (\r\n        <>\r\n            <Container fluid className=\"espaciado\">\r\n                <Row>\r\n                    <Col>\r\n                        <MaterialTable\r\n                            title=\"\"\r\n                            columns={columns}\r\n                            data={clientes}\r\n                            icons={tableIcons}\r\n                            localization={{\r\n                                toolbar: {\r\n                                    exportTitle: \"Exportar\",\r\n                                    searchTooltip: \"Buscar\",\r\n                                    searchPlaceholder: \"Buscar\",\r\n                                    showColumnsTitle: \"Mostrar Columnas\"\r\n                                },\r\n                                header: {\r\n                                    actions: \"Acciones\"\r\n                                },\r\n                                body: {\r\n                                    addTooltip: \"Crear\",\r\n                                    editTooltip: \"Editar\",\r\n                                    deleteTooltip: \"Eliminar\",\r\n                                    editRow: {\r\n                                        deleteText: \"Está seguro que desea eliminar el cliente\",\r\n                                        cancelTooltip: \"Cancelar\",\r\n                                        saveTooltip: \"Aceptar\"\r\n                                    },\r\n                                    emptyDataSourceMessage: \"No hay registros que mostrar\"\r\n                                },\r\n                                pagination: {\r\n                                    labelRowsSelect: \"filas\",\r\n                                    labelDisplayedRows: \"{from}-{to} de {count}\",\r\n                                    labelRowsPerPage: \"Filas por página:\",\r\n                                    firstAriaLabel: \"Primera página\",\r\n                                    firstTooltip: \"Primera página\",\r\n                                    previousAriaLabel: \"Página anterior\",\r\n                                    previousTooltip: \"Página anterior\",\r\n                                    nextAriaLabel: \"Siguiente página\",\r\n                                    nextTooltip: \"Siguiente página\",\r\n                                    lastAriaLabel: \"Última página\",\r\n                                    lastTooltip: \"Última página\"\r\n                                },\r\n                                grouping: {\r\n                                    placeholder: \"Arrastra los encabezados aquí para agruparlos\",\r\n                                    groupedBy: \"Agrupados por: \"\r\n                                }\r\n                            }}\r\n                            options={{\r\n                                addRowPosition: 'first',\r\n                                searchFieldAlignment: 'left',\r\n                                exportMenu: [\r\n                                    {\r\n                                        label: 'Exportar como PDF',\r\n                                        exportFunc: (cols, datas) => ExportPdf(cols, datas, 'Clientes')\r\n                                    },\r\n                                    {\r\n                                        label: 'Exportar como CSV',\r\n                                        exportFunc: (cols, datas) => ExportCsv(cols, datas, 'Clientes')\r\n                                    }\r\n                                ],\r\n                                grouping: true,\r\n                                filtering: true,\r\n                                columnsButton: true\r\n                            }}\r\n                            editable={{\r\n                                onRowAdd: newData =>\r\n                                    new Promise((resolve, reject) => {\r\n                                        if (newData && Object.keys(newData).length !== 0) {\r\n                                            newData.active = true;\r\n                                            if (!newData.agreement) {\r\n                                                newData.agreement = false;\r\n                                                newData.discount = 0;\r\n                                            }\r\n                                            if (!newData.discount) {\r\n                                                newData.discount = 0;\r\n                                            }\r\n                                            axios.post('/api/clientes', newData)\r\n                                                .then(resp => {\r\n                                                    console.log(resp);\r\n                                                    if (resp.data.ok) {\r\n                                                        setClientes([\r\n                                                            resp.data.data,\r\n                                                            ...clientes,\r\n                                                        ]);\r\n                                                    } else {\r\n                                                        Swal.fire('Error al crear el cliente', resp.data.message, 'error');\r\n                                                    }\r\n                                                    resolve();\r\n                                                }).catch(error => {\r\n                                                    console.log(error);\r\n                                                    Swal.fire('Error al crear el cliente', error?.message, 'error');\r\n                                                    resolve();\r\n                                                });\r\n                                        } else {\r\n                                            resolve();\r\n                                        }\r\n                                    }),\r\n                                onRowUpdate: (newData, oldData) =>\r\n                                    new Promise((resolve, reject) => {\r\n                                        axios.put(`/api/clientes/${newData._id}`, newData)\r\n                                            .then(resp => {\r\n                                                if (resp.data.ok) {\r\n                                                    const dataUpdate = [...clientes];\r\n                                                    const target = dataUpdate.find((el) => el.id === oldData.tableData.id);\r\n                                                    const index = dataUpdate.indexOf(target);\r\n                                                    dataUpdate[index] = newData;\r\n                                                    setClientes([...dataUpdate]);\r\n                                                } else {\r\n                                                    Swal.fire('Error al actualizar el cliente', resp.data.message, 'error');\r\n                                                }\r\n                                                resolve();\r\n                                            }).catch(error => {\r\n                                                console.log(error);\r\n                                                Swal.fire('Error al actualizar el cliente', error?.message, 'error');\r\n                                                resolve();\r\n                                            });\r\n                                    }),\r\n                                onRowDelete: oldData =>\r\n                                    new Promise((resolve, reject) => {\r\n                                        oldData.active = false;\r\n                                        axios.put(`/api/clientes/${oldData._id}`, oldData)\r\n                                            .then(resp => {\r\n                                                if (resp.data.ok) {\r\n                                                    const dataDelete = [...clientes];\r\n                                                    const target = dataDelete.find((el) => el.id === oldData.tableData.id);\r\n                                                    const index = dataDelete.indexOf(target);\r\n                                                    dataDelete.splice(index, 1);\r\n                                                    setClientes([...dataDelete]);\r\n                                                } else {\r\n                                                    Swal.fire('Error al eliminar el cliente', resp.data.message, 'error');\r\n                                                }\r\n                                                resolve();\r\n                                            }).catch(error => {\r\n                                                console.log(error);\r\n                                                Swal.fire('Error al eliminar el cliente', error?.message, 'error');\r\n                                                resolve();\r\n                                            });\r\n                                    }),\r\n                            }}\r\n                            actions={[\r\n                                {\r\n                                    icon: () => <RefreshIcon color={'action'} sx={{ fontSize: 30 }} />,\r\n                                    tooltip: 'Refrescar Datos',\r\n                                    isFreeAction: true,\r\n                                    onClick: () => setActualizar(!actualizar),\r\n                                },\r\n                                {\r\n                                    icon: () => <VisibilityIcon color={'secondary'} />,\r\n                                    tooltip: 'Detalle',\r\n                                    onClick: (event, rowData) => Swal.fire({\r\n                                        html: `\r\n                                    <row>\r\n                                        <h3>Estás visualizando al cliente:</h3>\r\n                                        <hr>\r\n                                        <col>\r\n                                                <p><b>Nombre:</b> ${rowData.firstName} ${rowData.lastName}</p>\r\n                                                <p><b>Rut:</b> ${rowData.rut}</p>\r\n                                                <p><b>Teléfono:</b> ${rowData.phone}</p>\r\n                                                <p><b>Email:</b> ${rowData.email}</p>\r\n                                                <p><b>Convenio:</b> ${rowData.agreement}</p>\r\n                                                <p><b>Descuento:</b> ${rowData.discount}</p>\r\n                                        </col>\r\n                                    </row>\r\n                                    `,\r\n                                        focusConfirm: false,\r\n                                        focusCancel: false,\r\n                                        customClass: {\r\n                                            container: 'swal-wide',\r\n                                            popup: 'swal-wide',\r\n                                            header: 'swal-wide',\r\n                                            closeButton: 'swal-wide',\r\n                                            icon: 'swal-wide',\r\n                                            image: 'swal-wide',\r\n                                            content: 'swal-wide',\r\n                                            actions: 'swal-wide',\r\n                                            confirmButton: 'swal-wide',\r\n                                            cancelButton: 'swal-wide',\r\n                                            footer: 'swal-wide',\r\n                                        },\r\n                                        showClass: {\r\n                                            popup: 'animated fadeIn faster',\r\n                                            actions: 'animated fadeIn faster',\r\n                                            confirmButton: 'animated zoomIn faster',\r\n                                            cancelButton: 'animated zoomIn faster',\r\n                                        },\r\n                                    }, JSON.stringify(rowData))\r\n                                }\r\n                            ]}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ClienteList;","import React from 'react';\r\nimport { Link, Route, Routes } from 'react-router-dom';\r\nimport { BsHouseDoor } from \"react-icons/bs\";\r\nimport { Container, Col, Row } from \"reactstrap\";\r\nimport { ImUsers } from 'react-icons/im';\r\nimport { MdFireplace } from \"react-icons/md\";\r\nimport { RiMoneyDollarCircleLine } from \"react-icons/ri\";\r\nimport { FiSettings } from \"react-icons/fi\";\r\nimport Logo from '../home/images/Logo.png';\r\nimport ClienteList from './list';\r\n\r\n\r\nconst ClientesAdmin = (props) => {\r\n\r\n    return <>\r\n    <Container fluid className=\"recuadro-nc\">\r\n        <Row>\r\n            <Col xs={4} sm={4} md={3} lg={3} className=\"espaciado4 alineacion\">\r\n                <Link to={`/`}><img src={Logo} width=\"150\" alt='logo'/></Link>\r\n            </Col>\r\n            <Col xs={4} sm={4} md={6} lg={6} className=\"espaciado4 alineacion-left\">\r\n                <h3><ImUsers color=\"blue\" style={{ marginRight: '10px', fontSize: '50', textAlign: 'center'}}/>Nuestros Clientes</h3>\r\n            </Col>\r\n            <Col xs={4} sm={4} md={3} lg={3} className=\"espaciado4 alineacion-right\">\r\n                <Link to=\"/\"><BsHouseDoor color=\"black\" size={32}  style={{ marginRight: '10px'}} /></Link>\r\n                <Link to=\"../estufas/\"><MdFireplace color=\"red\" size={32}  style={{ marginRight: '10px'}} /></Link>\r\n                <Link to=\"../ventas/\"><RiMoneyDollarCircleLine color=\"green\" size={32}  style={{ marginRight: '10px'}} /></Link>\r\n                <Link to=\"../mantenciones/\"><FiSettings color=\"gray\" size={32}  style={{ marginRight: '10px'}} /></Link>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Routes>\r\n                <Route path=\"/\" element={ <ClienteList /> } />\r\n            </Routes>\r\n        </Row>\r\n    </Container>\r\n    </>\r\n}\r\n\r\nexport default ClientesAdmin;","import React, { useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AiOutlineForm } from \"react-icons/ai\";\r\nimport Logo from \"../home/images/Logo.png\";\r\nimport Swal from \"sweetalert2\";\r\nimport UserContext from \"../context/user-context\";\r\n\r\nconst initialState = {\r\n  username: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst LoginForm = (props) => {\r\n  const [inputs, setInputs] = useState(initialState);\r\n  const context = useContext(UserContext);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const formUpdate = (e) => {\r\n    const { name, value } = e.target;\r\n    setInputs({\r\n      ...inputs,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const goIn = (e) => {\r\n    e?.stopPropagation();\r\n    navigate(\"/\");\r\n  };\r\n  const goHome = (e) => {\r\n    e?.stopPropagation();\r\n    navigate(\"/auth\");\r\n  };\r\n  const goReg = (e) => {\r\n    e?.stopPropagation();\r\n    navigate(\"/register\");\r\n  };\r\n\r\n  const formSubmit = (e) => {\r\n    e.preventDefault();\r\n    context.login(inputs);\r\n    // axios\r\n    //   .post(\"/api/login\", inputs)\r\n    //   .then((resp) => {\r\n    //     if (resp.data.ok) {\r\n    //       Swal.fire(\"Login\", resp.data.message, \"success\");\r\n    //       goIn();\r\n    //     } else {\r\n    //       Swal.fire(\"Login\", resp.data.message, \"error\");\r\n    //       goHome();\r\n    //     }\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n    \r\n  };\r\n\r\n  return (\r\n    <Container className=\"espaciado2 recuadro-reg-log\">\r\n      <Row>\r\n        <Col xs={12} md={6} lg={6} className=\"espaciado2 alineacion\">\r\n          <img src={Logo} width=\"300\" alt=\"logo\" />\r\n        </Col>\r\n        <Col xs={12} md={6} lg={6} className=\"espaciado3\">\r\n          <h2>Ingresar</h2>\r\n          <Form onSubmit={formSubmit}>\r\n            <Row>\r\n              <Col xs={12} md={8} lg={8}>\r\n                <FormGroup>\r\n                  <Label>E-mail:</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    placeholder=\"Ingresa tu e-mail\"\r\n                    value={inputs.username}\r\n                    onChange={formUpdate}\r\n                    required\r\n                    maxLength={50}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label>Contraseña:</Label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Ingresa tu contraseña\"\r\n                    value={inputs.password}\r\n                    onChange={formUpdate}\r\n                    required\r\n                    minLength={6}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={6} md={3}>\r\n                <Button color=\"primary\" type=\"submit\">\r\n                  Ingresar\r\n                </Button>\r\n              </Col>\r\n              <Col xs={6} md={3}>\r\n                <Button type=\"button\" onClick={goHome}>\r\n                  Cancelar\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={12} className=\"espaciado3\">\r\n                <p>\r\n                  ¿No tienes una cuenta creada?, regístrate aquí{\" \"}\r\n                  <Link to={`/register/`}>\r\n                    <AiOutlineForm\r\n                      color=\"green\"\r\n                      style={{\r\n                        marginRight: \"10px\",\r\n                        fontSize: \"30\",\r\n                        textAlign: \"center\",\r\n                      }}\r\n                    />\r\n                  </Link>\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BiLogInCircle } from \"react-icons/bi\";\r\nimport Logo from \"../home/images/Logo.png\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  confirmPassword: \"\",\r\n};\r\nconst RegisterForm = (props) => {\r\n  const [inputs, setInputs] = useState(initialState);\r\n  const navigate = useNavigate();\r\n  const formUpdate = (e) => {\r\n    const { name, value } = e.target;\r\n    setInputs({\r\n      ...inputs,\r\n      [name]: value,\r\n    });\r\n  };\r\n  const goHome = (e) => {\r\n    e?.stopPropagation();\r\n    navigate(\"/auth\");\r\n  };\r\n  const goLogin = (e) => {\r\n    e?.stopPropagation();\r\n    navigate(\"/login\");\r\n  };\r\n  const formSubmit = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\"/api/register\", inputs)\r\n      .then((resp) => {\r\n        if (resp.data.ok) {\r\n          Swal.fire(\"Registro de Usuarios\", resp.data.message, \"success\");\r\n          goHome();\r\n        } else {\r\n          Swal.fire(\"Registro de Usuarios\", resp.data.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container className=\"espaciado2 recuadro-reg-log\">\r\n      <Row>\r\n        <Col xs={12} md={6} lg={6} className=\"espaciado2 alineacion\">\r\n          <img src={Logo} width=\"300\" alt=\"logo\" />\r\n        </Col>\r\n        <Col xs={12} md={6} lg={6} className=\"espaciado3\">\r\n          <h2>Registrarse</h2>\r\n          <Form onSubmit={formSubmit}>\r\n            <Col xs={12} md={8} lg={8}>\r\n              <FormGroup>\r\n                <Label>Nombre y Apellido:</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  placeholder=\"Ingresa tu Nombre y Apellido\"\r\n                  value={inputs.name}\r\n                  onChange={formUpdate}\r\n                  required\r\n                  maxLength={50}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <Label>Email:</Label>\r\n                <Input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  placeholder=\"Ingresa tu e-mail\"\r\n                  value={inputs.email}\r\n                  onChange={formUpdate}\r\n                  required\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <Label>Perfil:</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"profile\"\r\n                  value={inputs.profile}\r\n                  onChange={formUpdate}\r\n                  required\r\n                >\r\n                  <option value=\"\">Seleccione un Perfil</option>\r\n                  <option value=\"admin\">Administrador</option>\r\n                  <option value=\"user\">Usuario</option>\r\n                </Input>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label>Contraseña:</Label>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  placeholder=\"Ingresa una contraseña mínimo de 6 dígitos\"\r\n                  value={inputs.password}\r\n                  onChange={formUpdate}\r\n                  required\r\n                  minLength={6}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <Label>Confirmar Contraseña:</Label>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"confirmPassword\"\r\n                  placeholder=\"La contraseña debe coincidir\"\r\n                  value={inputs.confirmPassword}\r\n                  onChange={formUpdate}\r\n                  required\r\n                  minLength={6}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Row>\r\n              <Col xs={6} md={3}>\r\n                <Button color=\"success\" type=\"submit\">\r\n                  Registrarse\r\n                </Button>\r\n              </Col>\r\n              <Col xs={6} md={3}>\r\n                <Button type=\"button\" onClick={goHome}>\r\n                  Cancelar\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={12} className=\"espaciado3\">\r\n                <p>\r\n                  Si ya tienes una cuenta, haz click aquí{\" \"}\r\n                  <Link to={`/login/`}>\r\n                    <BiLogInCircle\r\n                      color=\"blue\"\r\n                      style={{\r\n                        marginRight: \"10px\",\r\n                        fontSize: \"30\",\r\n                        textAlign: \"center\",\r\n                      }}\r\n                    />\r\n                  </Link>\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\n\nconst ClienteFooter = (props) => {\n\n    return (\n        <>\n         <Container>\n            <Row>\n                <Col className=\"footer\">\n                    <p><a href=\"https://www.qualitypellets.cl\">Sitio Web Quality Pellets</a> · +56 9 6509 8393 Quality Pellets Chile, es representante de 2D Electrónica en la V Región</p>\n                </Col>\n            </Row>\n        </Container>\n        </>\n    );\n}\n\nexport default ClienteFooter;","import React, { useContext } from 'react';\nimport Logo from './images/Logo.png';\nimport { Container, Row, Col, Navbar, NavbarBrand, Collapse, NavbarText, Button } from 'reactstrap';\nimport { FiLogOut } from 'react-icons/fi';\nimport UserContext from '../context/user-context';\n\n\nconst ClienteTop = (props) => {\n\n    const context = useContext(UserContext);\n\n    const logout = e => {\n        context.logout();\n    }\n\n    return (\n        <>\n            <Container>\n                <Row>\n                    <Col>\n                        <Navbar color=\"dark\" dark expand=\"md\" fixed=\"top\" full light className=\"estilo-top\" >\n                            <NavbarBrand><img src={Logo} width=\"150\" alt='logo' /> </NavbarBrand>\n                            <Collapse navbar>\n\n                            </Collapse>\n                            {context.user &&\n                                <NavbarText>\n                                    <h4>Bienvenido {context.user.name}.</h4>\n                                </NavbarText> }\n                            {context.user &&\n                                <NavbarText>\n                                    <Button color=\"primary\" size=\"md\" style={{ \"marginLeft\": \"30px\" }} onClick={logout}>\n                                        <FiLogOut color=\"white\"\n                                            style={{\n                                                marginRight: \"10px\",\n                                                fontSize: \"25\",\n                                                textAlign: \"center\",\n                                            }} />Salir</Button>\n                                </NavbarText>\n                            }\n                        </Navbar>\n                    </Col>\n                </Row>\n            </Container>\n            <br /><br /><br />\n        </>\n    );\n}\n\nexport default ClienteTop;","import { forwardRef, useEffect, useState } from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport MaterialTable from \"@material-table/core\";\r\nimport { ExportCsv, ExportPdf } from \"@material-table/exporters\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\n\r\nimport AddBoxIcon from \"@mui/icons-material/AddBox\";\r\nimport ArrowUpwardIcon from \"@mui/icons-material/ArrowUpward\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport ClearIcon from \"@mui/icons-material/Clear\";\r\nimport DeleteOutlineIcon from \"@mui/icons-material/DeleteOutline\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\r\nimport FirstPageIcon from \"@mui/icons-material/FirstPage\";\r\nimport LastPageIcon from \"@mui/icons-material/LastPage\";\r\nimport RemoveIcon from \"@mui/icons-material/Remove\";\r\nimport SaveAltIcon from \"@mui/icons-material/SaveAlt\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport ViewColumnIcon from \"@mui/icons-material/ViewColumn\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport RefreshIcon from \"@mui/icons-material/Refresh\";\r\nimport { TextField } from \"@mui/material\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => (\r\n    <AddBoxIcon {...props} ref={ref} sx={{ fontSize: 30 }} />\r\n  )),\r\n  Check: forwardRef((props, ref) => <CheckIcon {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <ClearIcon {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => (\r\n    <DeleteOutlineIcon {...props} ref={ref} color=\"error\" />\r\n  )),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRightIcon {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => (\r\n    <EditIcon {...props} ref={ref} color=\"primary\" />\r\n  )),\r\n  Export: forwardRef((props, ref) => <SaveAltIcon {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterListIcon {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPageIcon {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPageIcon {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => (\r\n    <ChevronRightIcon {...props} ref={ref} />\r\n  )),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeftIcon {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <ClearIcon {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <SearchIcon {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => (\r\n    <ArrowUpwardIcon {...props} ref={ref} />\r\n  )),\r\n  ThirdStateCheck: forwardRef((props, ref) => (\r\n    <RemoveIcon {...props} ref={ref} />\r\n  )),\r\n  ViewColumn: forwardRef((props, ref) => (\r\n    <ViewColumnIcon {...props} ref={ref} />\r\n  )),\r\n};\r\n\r\nconst EstufaList = () => {\r\n  const [estufas, setEstufas] = useState([]);\r\n  const [actualizar, setActualizar] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/api/estufas\")\r\n      .then((resp) => {\r\n        setEstufas(resp.data.data);\r\n      })\r\n      .catch((error) => Swal.fire(\"Error\", error.message, \"error\"));\r\n  }, [actualizar]);\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: \"Id\", field: \"_id\", hidden: true, filtering: false },\r\n    {\r\n      title: \"Nombre\",\r\n      field: \"stoveName\",\r\n      editComponent: (props) => (\r\n        <TextField\r\n          id=\"stoveName\"\r\n          label=\"Nombre\"\r\n          variant=\"outlined\"\r\n          value={props.value}\r\n          onChange={(e) => props.onChange(e.target.value)}\r\n          helperText={props.helperText}\r\n          error={props.error}\r\n        />\r\n      ),\r\n      validate: (rowData) =>\r\n        rowData.stoveName &&\r\n        (rowData.stoveName.length < 3 || rowData.stoveName.length > 50)\r\n          ? {\r\n              isValid: false,\r\n              helperText:\r\n                \"El Nombre de la estufa debe tener más de 3 y menos de 50 caracteres.\",\r\n            }\r\n          : true,\r\n    },\r\n    {\r\n      title: \"Marca\",\r\n      field: \"stoveBrand\",\r\n      editComponent: (props) => (\r\n        <TextField\r\n          id=\"stoveBrand\"\r\n          label=\"Marca\"\r\n          variant=\"outlined\"\r\n          value={props.value}\r\n          onChange={(e) => props.onChange(e.target.value)}\r\n          helperText={props.helperText}\r\n          error={props.error}\r\n        />\r\n      ),\r\n      validate: (rowData) =>\r\n        rowData.stoveBrand && rowData.stoveBrand.length < 3\r\n          ? {\r\n              isValid: false,\r\n              helperText:\r\n                \"La Marca de la estufa debe contener mínimo 3 caracteres.\",\r\n            }\r\n          : true,\r\n    },\r\n    {\r\n      title: \"Modelo\",\r\n      field: \"stoveModel\",\r\n      editComponent: (props) => (\r\n        <TextField\r\n          id=\"stoveModel\"\r\n          label=\"Modelo\"\r\n          variant=\"outlined\"\r\n          value={props.value}\r\n          onChange={(e) => props.onChange(e.target.value)}\r\n          helperText={props.helperText}\r\n          error={props.error}\r\n        />\r\n      ),\r\n      validate: (rowData) =>\r\n        rowData.stoveModel && rowData.stoveModel.length < 3\r\n          ? {\r\n              isValid: false,\r\n              helperText:\r\n                \"El Modelo de la estufa debe contener mínimo 3 caracteres.\",\r\n            }\r\n          : true,\r\n    },\r\n    {\r\n      title: \"Código\",\r\n      field: \"stoveCode\",\r\n      editComponent: (props) => (\r\n        <TextField\r\n          id=\"stoveCode\"\r\n          label=\"Código\"\r\n          variant=\"outlined\"\r\n          value={props.value}\r\n          onChange={(e) => props.onChange(e.target.value)}\r\n          helperText={props.helperText}\r\n          error={props.error}\r\n        />\r\n      ),\r\n      validate: (rowData) =>\r\n        rowData.stoveCode && rowData.stoveCode.length < 4\r\n          ? {\r\n              isValid: false,\r\n              helperText:\r\n                \"El Código de la estufa debe contener mínimo 4 caracteres.\",\r\n            }\r\n          : true,\r\n    },\r\n    {\r\n      title: \"Color\",\r\n      field: \"stoveColor\",\r\n      editComponent: (props) => (\r\n        <TextField\r\n          id=\"stoveColor\"\r\n          label=\"Color\"\r\n          variant=\"outlined\"\r\n          value={props.value}\r\n          onChange={(e) => props.onChange(e.target.value)}\r\n        />\r\n      ),\r\n      filtering: false,\r\n    },\r\n    {\r\n      title: \"País Origen\",\r\n      field: \"stoveOrigin\",\r\n      filtering: false,\r\n      editComponent: (props) => (\r\n        <TextField\r\n          id=\"stoveOrigin\"\r\n          label=\"País Origen\"\r\n          variant=\"outlined\"\r\n          value={props.value}\r\n          onChange={(e) => props.onChange(e.target.value)}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"Cantidad\",\r\n      field: \"stoveAmount\",\r\n      filtering: false,\r\n      editComponent: (props) => (\r\n        <TextField\r\n          type=\"number\"\r\n          id=\"stoveAmount\"\r\n          label=\"Cantidad\"\r\n          variant=\"outlined\"\r\n          value={props.value}\r\n          onChange={(e) => props.onChange(e.target.value)}\r\n          defaultValue={0}\r\n        />\r\n      ),\r\n      type: \"numeric\",\r\n    },\r\n    {\r\n      title: \"Precio Unitario\",\r\n      field: \"stoveUnitPrice\",\r\n      filtering: false,\r\n      type: \"currency\",\r\n      currencySetting: {\r\n        locale: \"es\",\r\n        currencyCode: \"CLP\",\r\n        minimumFractionDigits: 0,\r\n        maximumFractionDigits: 0,\r\n      },\r\n      editComponent: (props) => (\r\n        <TextField\r\n          type=\"number\"\r\n          id=\"stoveUnitPrice\"\r\n          label=\"Precio Unitario CLP\"\r\n          variant=\"outlined\"\r\n          value={props.value}\r\n          onChange={(e) => props.onChange(e.target.value)}\r\n          helperText={props.helperText}\r\n          error={props.error}\r\n        />\r\n      ),\r\n      validate: (rowData) =>\r\n        rowData.stoveUnitPrice && rowData.stoveUnitPrice <= 0\r\n          ? {\r\n              isValid: false,\r\n              helperText:\r\n                \"El Precio Unitario debe ser mayor a 0.\",\r\n            }\r\n          : true,\r\n    },\r\n    {\r\n      title: \"Imágen\",\r\n      field: \"stoveImage\",\r\n      filtering: false,\r\n      editComponent: (props) => (\r\n        <TextField\r\n          id=\"stoveImage\"\r\n          label=\"Imágen\"\r\n          variant=\"outlined\"\r\n          value={props.value}\r\n          onChange={(e) => props.onChange(e.target.value)}\r\n        />\r\n      ),\r\n      render: rowData => (<img src={rowData.stoveImage} style={{width: 60, borderRadius: '50%'}}/>)\r\n    },\r\n    {\r\n      title: \"Características\",\r\n      field: \"stoveCharacteristic\",\r\n      editComponent: (props) => (\r\n        <TextField\r\n          id=\"stoveCharacteristic\"\r\n          label=\"Características\"\r\n          variant=\"outlined\"\r\n          value={props.value}\r\n          onChange={(e) => props.onChange(e.target.value)}\r\n        />\r\n      ),\r\n      filtering: false,\r\n    },\r\n    { title: \"Activo\", field: \"active\", hidden: true, filtering: false },\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <Container fluid className=\"espaciado\">\r\n        <Row>\r\n          <Col>\r\n            <MaterialTable\r\n              title=\"\"\r\n              columns={columns}\r\n              data={estufas}\r\n              icons={tableIcons}\r\n              localization={{\r\n                toolbar: {\r\n                  exportTitle: \"Exportar\",\r\n                  searchTooltip: \"Buscar\",\r\n                  searchPlaceholder: \"Buscar\",\r\n                  showColumnsTitle: \"Mostrar Columnas\",\r\n                },\r\n                header: {\r\n                  actions: \"Acciones\",\r\n                },\r\n                body: {\r\n                  addTooltip: \"Crear\",\r\n                  editTooltip: \"Editar\",\r\n                  deleteTooltip: \"Eliminar\",\r\n                  editRow: {\r\n                    deleteText: \"Está seguro que desea eliminar el Producto\",\r\n                    cancelTooltip: \"Cancelar\",\r\n                    saveTooltip: \"Aceptar\",\r\n                  },\r\n                  emptyDataSourceMessage: \"No hay registros que mostrar\",\r\n                },\r\n                pagination: {\r\n                  labelRowsSelect: \"filas\",\r\n                  labelDisplayedRows: \"{from}-{to} de {count}\",\r\n                  labelRowsPerPage: \"Filas por página:\",\r\n                  firstAriaLabel: \"Primera página\",\r\n                  firstTooltip: \"Primera página\",\r\n                  previousAriaLabel: \"Página anterior\",\r\n                  previousTooltip: \"Página anterior\",\r\n                  nextAriaLabel: \"Siguiente página\",\r\n                  nextTooltip: \"Siguiente página\",\r\n                  lastAriaLabel: \"Última página\",\r\n                  lastTooltip: \"Última página\",\r\n                },\r\n                grouping: {\r\n                  placeholder: \"Arrastra los encabezados aquí para agruparlos\",\r\n                  groupedBy: \"Agrupados por: \",\r\n                },\r\n              }}\r\n              options={{\r\n                addRowPosition: \"first\",\r\n                searchFieldAlignment: \"left\",\r\n                exportMenu: [\r\n                  {\r\n                    label: \"Exportar como PDF\",\r\n                    exportFunc: (cols, datas) =>\r\n                      ExportPdf(cols, datas, \"Productos\"),\r\n                  },\r\n                  {\r\n                    label: \"Exportar como CSV\",\r\n                    exportFunc: (cols, datas) =>\r\n                      ExportCsv(cols, datas, \"Productos\"),\r\n                  },\r\n                ],\r\n                grouping: true,\r\n                filtering: true,\r\n                columnsButton: true,\r\n              }}\r\n              editable={{\r\n                onRowAdd: (newData) =>\r\n                  new Promise((resolve, reject) => {\r\n                    if (newData && Object.keys(newData).length !== 0) {\r\n                      newData.active = true;\r\n\r\n                      axios\r\n                        .post(\"/api/estufas\", newData)\r\n                        .then((resp) => {\r\n                          console.log(resp);\r\n                          if (resp.data.ok) {\r\n                            setEstufas([resp.data.data, ...estufas]);\r\n                          } else {\r\n                            Swal.fire(\r\n                              \"Error al crear el producto\",\r\n                              resp.data.message,\r\n                              \"error\"\r\n                            );\r\n                          }\r\n                          resolve();\r\n                        })\r\n                        .catch((error) => {\r\n                          console.log(error);\r\n                          Swal.fire(\r\n                            \"Error al crear el producto\",\r\n                            error?.message,\r\n                            \"error\"\r\n                          );\r\n                          resolve();\r\n                        });\r\n                    } else {\r\n                      resolve();\r\n                    }\r\n                  }),\r\n                onRowUpdate: (newData, oldData) =>\r\n                  new Promise((resolve, reject) => {\r\n                    axios\r\n                      .put(`/api/estufas/${newData._id}`, newData)\r\n                      .then((resp) => {\r\n                        if (resp.data.ok) {\r\n                          const dataUpdate = [...estufas];\r\n                          const target = dataUpdate.find(\r\n                            (el) => el.id === oldData.tableData.id\r\n                          );\r\n                          const index = dataUpdate.indexOf(target);\r\n                          dataUpdate[index] = newData;\r\n                          setEstufas([...dataUpdate]);\r\n                        } else {\r\n                          Swal.fire(\r\n                            \"Error al actualizar el producto\",\r\n                            resp.data.message,\r\n                            \"error\"\r\n                          );\r\n                        }\r\n                        resolve();\r\n                      })\r\n                      .catch((error) => {\r\n                        console.log(error);\r\n                        Swal.fire(\r\n                          \"Error al actualizar el producto\",\r\n                          error?.message,\r\n                          \"error\"\r\n                        );\r\n                        resolve();\r\n                      });\r\n                  }),\r\n                onRowDelete: (oldData) =>\r\n                  new Promise((resolve, reject) => {\r\n                    oldData.active = false;\r\n                    axios\r\n                      .put(`/api/estufas/${oldData._id}`, oldData)\r\n                      .then((resp) => {\r\n                        if (resp.data.ok) {\r\n                          const dataDelete = [...estufas];\r\n                          const target = dataDelete.find(\r\n                            (el) => el.id === oldData.tableData.id\r\n                          );\r\n                          const index = dataDelete.indexOf(target);\r\n                          dataDelete.splice(index, 1);\r\n                          setEstufas([...dataDelete]);\r\n                        } else {\r\n                          Swal.fire(\r\n                            \"Error al eliminar el producto\",\r\n                            resp.data.message,\r\n                            \"error\"\r\n                          );\r\n                        }\r\n                        resolve();\r\n                      })\r\n                      .catch((error) => {\r\n                        console.log(error);\r\n                        Swal.fire(\r\n                          \"Error al eliminar el producto\",\r\n                          error?.message,\r\n                          \"error\"\r\n                        );\r\n                        resolve();\r\n                      });\r\n                  }),\r\n              }}\r\n              actions={[\r\n                {\r\n                  icon: () => (\r\n                    <RefreshIcon color={\"action\"} sx={{ fontSize: 30 }} />\r\n                  ),\r\n                  tooltip: \"Refrescar Datos\",\r\n                  isFreeAction: true,\r\n                  onClick: () => setActualizar(!actualizar),\r\n                },\r\n                {\r\n                  icon: () => <VisibilityIcon color={\"secondary\"} />,\r\n                  tooltip: \"Detalle\",\r\n                  onClick: (event, rowData) =>\r\n                    Swal.fire(\r\n                      {\r\n                        html: `\r\n              <row>\r\n                  <h3>Estás visualizando una Estufa:</h3>\r\n                  <hr>\r\n                  <col>\r\n                          <p><b>Nombre:</b> ${rowData.stoveName}</p>\r\n                          <p><b>Marca:</b> ${rowData.stoveBrand}</p>\r\n                          <p><b>Modelo:</b> ${rowData.stoveModel}</p>\r\n                          <p><b>Código:</b> ${rowData.stoveCode}</p>\r\n                          <p><b>Color:</b> ${rowData.stoveColor}</p>\r\n                          <p><b>País de Origen:</b>${rowData.stoveOrigin}</p>          \r\n                          <p><b>Precio:</b> ${rowData.stoveAmount}</p>\r\n                          <p><b>Precio Unitario:</b> ${rowData.stoveUnitPrice}</p>\r\n                          <p><b>Imagen:</b> <img src=${rowData.stoveImage} alt=\"Imagen\" width=\"100\"/></p>\r\n                          <p><b>Características:</b> ${rowData.stoveCharacteristic}</p>\r\n                  </col>\r\n              </row>\r\n              `,\r\n                        focusConfirm: false,\r\n                        focusCancel: false,\r\n                        customClass: {\r\n                          container: \"swal-wide\",\r\n                          popup: \"swal-wide\",\r\n                          header: \"swal-wide\",\r\n                          closeButton: \"swal-wide\",\r\n                          icon: \"swal-wide\",\r\n                          image: \"swal-wide\",\r\n                          content: \"swal-wide\",\r\n                          actions: \"swal-wide\",\r\n                          confirmButton: \"swal-wide\",\r\n                          cancelButton: \"swal-wide\",\r\n                          footer: \"swal-wide\",\r\n                        },\r\n                        showClass: {\r\n                          popup: \"animated fadeIn faster\",\r\n                          actions: \"animated fadeIn faster\",\r\n                          confirmButton: \"animated zoomIn faster\",\r\n                          cancelButton: \"animated zoomIn faster\",\r\n                        },\r\n                      },\r\n                      JSON.stringify(rowData)\r\n                    ),\r\n                },\r\n              ]}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EstufaList;\r\n","import React from 'react';\r\nimport { Link, Route, Routes } from 'react-router-dom';\r\nimport { BsHouseDoor } from \"react-icons/bs\";\r\nimport { Container, Col, Row } from \"reactstrap\";\r\nimport Logo from '../home/images/Logo.png';\r\nimport { MdFireplace } from 'react-icons/md';\r\nimport { ImUsers } from \"react-icons/im\";\r\nimport { RiMoneyDollarCircleLine } from \"react-icons/ri\";\r\nimport { FiSettings } from \"react-icons/fi\";\r\nimport EstufaList from './list';\r\n\r\n\r\nconst EstufasAdmin = (props) => {\r\n\r\n    return <>\r\n    <Container fluid className=\"recuadro-nc\">\r\n        <Row>\r\n            <Col xs={4} sm={4} md={3} lg={3} className=\"espaciado4 alineacion\">\r\n            <Link to={`/`}><img src={Logo} width=\"150\" alt='logo'/></Link>\r\n            </Col>\r\n            <Col xs={4} sm={4} md={6} lg={6} className=\"espaciado4 alineacion-left\">\r\n                <h3><MdFireplace color=\"red\" style={{ marginRight: '10px', fontSize: '50', textAlign: 'center'}}/>Estufas y Calderas</h3>\r\n            </Col>\r\n            <Col xs={4} sm={4} md={3} lg={3} className=\"espaciado4 alineacion-right\">\r\n                <Link to=\"/\"><BsHouseDoor color=\"black\" size={32}  style={{ marginRight: '10px'}} /></Link>\r\n                <Link to=\"../clientes/\"><ImUsers color=\"blue\" size={32}  style={{ marginRight: '10px'}} /></Link>\r\n                <Link to=\"../ventas/\"><RiMoneyDollarCircleLine color=\"green\" size={32}  style={{ marginRight: '10px'}} /></Link>\r\n                <Link to=\"../mantenciones/\"><FiSettings color=\"gray\" size={32}  style={{ marginRight: '10px'}} /></Link>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Routes>\r\n                <Route path=\"/\" element={ <EstufaList /> } />\r\n            </Routes>\r\n        </Row>\r\n    </Container>\r\n    </>\r\n}\r\n\r\nexport default EstufasAdmin;","import { forwardRef, useEffect, useMemo, useState } from 'react';\n\nimport axios from 'axios';\nimport Swal from \"sweetalert2\";\n\nimport MaterialTable from '@material-table/core';\nimport { ExportCsv, ExportPdf } from '@material-table/exporters';\nimport { Container, Row, Col } from \"reactstrap\";\n\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport CheckIcon from '@mui/icons-material/Check';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport EditIcon from '@mui/icons-material/Edit';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport LastPageIcon from '@mui/icons-material/LastPage';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport SaveAltIcon from '@mui/icons-material/SaveAlt';\nimport SearchIcon from '@mui/icons-material/Search';\nimport ViewColumnIcon from '@mui/icons-material/ViewColumn';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport { Autocomplete, TextField } from '@mui/material';\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBoxIcon {...props} ref={ref} sx={{ fontSize: 30 }} />),\n    Check: forwardRef((props, ref) => <CheckIcon {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <ClearIcon {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutlineIcon {...props} ref={ref} color=\"error\" />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRightIcon {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <EditIcon {...props} ref={ref} color=\"primary\" />),\n    Export: forwardRef((props, ref) => <SaveAltIcon {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterListIcon {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPageIcon {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPageIcon {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRightIcon {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeftIcon {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <ClearIcon {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <SearchIcon {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowUpwardIcon {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <RemoveIcon {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumnIcon {...props} ref={ref} />),\n};\n\nlet clookup = {};\nlet elookup = {};\n\nconst slookup = {\n    Efectivo: \"Efectivo\",\n    Crédito: \"Crédito\",\n    Débito: \"Débito\",\n    Transferencia: \"Transferencia\",\n};\n\nlet vlookup = {};\n\nconst formaspago = [\"Efectivo\", \"Crédito\", \"Débito\", \"Transferencia\"];\n\nconst VentasList = (props) => {\n    const [ventas, setVentas] = useState([]);\n\n    const [actualizar, setActualizar] = useState(false);\n    const [clientes, setClientes] = useState({});\n    const [estufas, setEstufas] = useState({});\n    const [reloadcolum, setReloadcolum] = useState(false);\n\n    useEffect(() => {\n        axios.get('/api/clientes')\n            .then(resp => {\n                setClientes(resp.data.data);\n                let _lookup = {};\n                resp.data.data.forEach(element => {\n                    _lookup[element._id.toString()] = `${element.firstName} ${element.lastName}`;\n                });\n                clookup = _lookup;\n\n                axios.get('/api/estufas')\n                    .then(resp => {\n                        setEstufas(resp.data.data);\n                        _lookup = {};\n                        resp.data.data.forEach(element => {\n                            _lookup[element._id.toString()] = `${element.stoveBrand} ${element.stoveModel}`;\n                        });\n                        elookup = _lookup;\n                        axios.get('/api/usuarios')\n                            .then(resp => {\n                                _lookup = {};\n                                resp.data.data.forEach(element => {\n                                    _lookup[element._id.toString()] = element.name;\n                                });\n                                vlookup = _lookup;\n                                setReloadcolum(!reloadcolum);\n                            })\n                            .catch(error =>\n                                Swal.fire('Error', error.message, 'error'));\n                    })\n                    .catch(error =>\n                        Swal.fire('Error', error.message, 'error'));\n                //setReloadcolum(!reloadcolum);\n            })\n            .catch(error =>\n                Swal.fire('Error', error.message, 'error'));\n    }, [actualizar]);\n\n    useEffect(() => {\n        axios.get('/api/ventas')\n            .then(resp => {\n                setVentas(resp.data.data);\n                //setReloadcolum(!reloadcolum);\n            })\n            .catch(error => {\n                Swal.fire('Error', error.message, 'error');\n            })\n    }, [actualizar]);\n\n    const getName = (info) => {\n        if (info.value) {\n            const cliente = clientes.find(\n                (el) => el.id === info.value\n            );\n            return `${cliente.firstName} ${cliente.lastName}`;\n        }\n        return \"\";\n    }\n\n    const getProduct = (info) => {\n        if (info.value) {\n            const estufa = estufas.find(\n                (el) => el.id === info.value\n            );\n            return `${estufa.stoveBrand} ${estufa.stoveModel}`;\n        }\n        return \"\";\n    }\n\n\n    const getSalePrice = (data) => {\n        let precio = 0;\n        let discountByClient = 0;\n        let discountBySale = 0;\n\n        if (data.product && data.quantitie) {\n            const _estufas = [...estufas];\n            const _estufa = _estufas.find(\n                (el) => el.id === data.product\n            );\n            const globalPrice = (parseInt(_estufa.stoveUnitPrice) * parseInt(data.quantitie));\n            precio = globalPrice;\n\n            if (data.client) {\n                const _clientes = [...clientes];\n                const _cliente = _clientes.find(\n                    (el) => el.id === data.client\n                );\n                discountByClient = Math.round(globalPrice * parseInt(_cliente.discount) / 100);\n            }\n\n            if (data.discount && data.discount > 0) {\n                discountBySale = Math.round(globalPrice * parseInt(data.discount) / 100);\n            }\n        }\n\n        return precio - discountByClient - discountBySale;\n    }\n\n    const columns = useMemo(() => ([\n        { title: 'Id', field: \"_id\", hidden: true, filtering: false },\n        {\n            title: 'Cliente',\n            field: 'client',\n            lookup: clookup,\n            editComponent: props => (\n                <Autocomplete\n                    id=\"client\"\n                    options={clientes}\n                    getOptionLabel={option => `${option.firstName} ${option.lastName}`}\n                    renderInput={params => {\n                        return (\n                            <TextField\n                                {...params}\n                                variant=\"outlined\"\n                                label={getName(props)}\n                                fullWidth\n                            />\n                        );\n                    }}\n                    onChange={(e, newValue) => {\n                        if (newValue) {\n                            props.onChange(newValue._id);\n                            let _rowData = {...props.rowData};\n                            _rowData['client'] = newValue._id;\n                            _rowData[\"salePrice\"] = getSalePrice(_rowData);\n                            props.onRowDataChange(_rowData);\n                        }\n                    }}\n                />\n            )\n        },\n        {\n            title: 'Producto',\n            field: 'product',\n            lookup: elookup,\n            editComponent: props => (\n                <Autocomplete\n                    id=\"product\"\n                    options={estufas}\n                    getOptionLabel={option => `${option.stoveBrand} ${option.stoveModel}`}\n                    renderInput={params => {\n                        return (\n                            <TextField\n                                {...params}\n                                variant=\"outlined\"\n                                label={getProduct(props)}\n                                fullWidth\n                            />\n                        );\n                    }}\n                    onChange={(e, newValue) => {\n                        if (newValue) {\n                            props.onChange(newValue._id);\n                            let _rowData = {...props.rowData};\n                            _rowData['product'] = newValue._id;\n                            _rowData[\"salePrice\"] = getSalePrice(_rowData);\n                            props.onRowDataChange(_rowData);\n                        }\n                    }}\n                />\n            )\n        },\n        {\n            title: 'Cantidad',\n            field: 'quantitie',\n            type: 'numeric',\n            editComponent: props => (\n                <TextField id='quantitie' type=\"number\" label=\"Cantidad\" variant=\"outlined\" value={props.value} onChange={e => {\n                    props.onChange(e.target.value);\n                    let _rowData = {...props.rowData};\n                    _rowData['quantitie'] = e.target.value;\n                    _rowData[\"salePrice\"] = getSalePrice(_rowData);\n                    props.onRowDataChange(_rowData);\n                }} />\n            )\n        },\n        {\n            title: 'Descuento %',\n            field: 'discount',\n            type: 'numeric',\n            editComponent: props => (\n                <TextField id='discount' type=\"number\" label=\"Descuento\" variant=\"outlined\" value={props.value} onChange={e => {\n                    props.onChange(e.target.value);\n                    let _rowData = {...props.rowData};\n                    _rowData['discount'] = e.target.value;\n                    _rowData[\"salePrice\"] = getSalePrice(_rowData);\n                    props.onRowDataChange(_rowData);\n                }} />\n            )\n        },\n        {\n            title: 'Precio de Venta',\n            field: 'salePrice',\n            type: \"currency\",\n            editable: 'never',\n            currencySetting: {\n                locale: \"es\",\n                currencyCode: \"CLP\",\n                minimumFractionDigits: 0,\n                maximumFractionDigits: 0,\n            },\n            editComponent: props => (\n                <TextField id='salePrice' type=\"number\" label=\"Precio de Venta\" variant=\"outlined\" value={props.value} onChange={e => props.onChange(e.target.value)} />\n            )\n        },\n        // {\n        //     title: 'Fecha',\n        //     field: 'saleDate',\n        //     type: 'datetime'\n        // },\n        // {\n        //     title: 'Vendedor',\n        //     field: 'seller',\n        //     editComponent: props => (\n        //         <TextField id='seller' label=\"Vendedor\" variant=\"outlined\" value={props.value} onChange={e => props.onChange(e.target.value)} />\n        //     )\n        // },\n        {\n            title: 'Método de Pago',\n            field: 'paymentMethod',\n            lookup: slookup,\n            editComponent: (props) => (\n                <Autocomplete\n                    id=\"paymentMethod\"\n                    options={formaspago}\n                    getOptionLabel={(option) => option}\n                    renderInput={(params) => {\n                        return (\n                            <TextField\n                                {...params}\n                                variant=\"outlined\"\n                                label={props.value}\n                                fullWidth\n                            />\n                        );\n                    }}\n                    onChange={(e, newValue) => {\n                        if (newValue) {\n                            props.onChange(newValue);\n                        }\n                    }}\n                />\n            ),\n        },\n        {\n            title: 'Observaciones',\n            field: 'observations',\n            editComponent: props => (\n                <TextField id='observations' label=\"Observaciones\" variant=\"outlined\" value={props.value} onChange={e => props.onChange(e.target.value)} />\n            )\n        },\n        {\n            title: 'Fecha de Venta',\n            field: 'createdAt',\n            editable: 'never',\n            type: 'date'\n        },\n        {\n            title: 'Vendedor',\n            field: 'userId',\n            editable: 'never',\n            hidden: true,\n            lookup: vlookup\n        },\n        { title: 'Activo', field: 'active', hidden: true, filtering: false },\n    ]), [reloadcolum]);\n\n\n    return (\n        <>\n            <Container fluid className=\"espaciado\">\n                <Row>\n                    <Col>\n                        <MaterialTable\n                            title=\"\"\n                            columns={columns}\n                            data={ventas}\n                            icons={tableIcons}\n                            localization={{\n                                toolbar: {\n                                    exportTitle: \"Exportar\",\n                                    searchTooltip: \"Buscar\",\n                                    searchPlaceholder: \"Buscar\",\n                                    showColumnsTitle: \"Mostrar Columnas\"\n                                },\n                                header: {\n                                    actions: \"Acciones\"\n                                },\n                                body: {\n                                    addTooltip: \"Crear\",\n                                    editTooltip: \"Editar\",\n                                    deleteTooltip: \"Eliminar\",\n                                    editRow: {\n                                        deleteText: \"Está seguro que desea eliminar el Mantenimiento\",\n                                        cancelTooltip: \"Cancelar\",\n                                        saveTooltip: \"Aceptar\"\n                                    },\n                                    emptyDataSourceMessage: \"No hay registros que mostrar\"\n                                },\n                                pagination: {\n                                    labelRowsSelect: \"filas\",\n                                    labelDisplayedRows: \"{from}-{to} de {count}\",\n                                    labelRowsPerPage: \"Filas por página:\",\n                                    firstAriaLabel: \"Primera página\",\n                                    firstTooltip: \"Primera página\",\n                                    previousAriaLabel: \"Página anterior\",\n                                    previousTooltip: \"Página anterior\",\n                                    nextAriaLabel: \"Siguiente página\",\n                                    nextTooltip: \"Siguiente página\",\n                                    lastAriaLabel: \"Última página\",\n                                    lastTooltip: \"Última página\"\n                                },\n                                grouping: {\n                                    placeholder: \"Arrastra los encabezados aquí para agruparlos\",\n                                    groupedBy: \"Agrupados por: \"\n                                }\n                            }}\n                            options={{\n                                addRowPosition: 'first',\n                                searchFieldAlignment: 'left',\n                                exportMenu: [\n                                    {\n                                        label: 'Exportar como PDF',\n                                        exportFunc: (cols, datas) => ExportPdf(cols, datas, 'Mantenimientos')\n                                    },\n                                    {\n                                        label: 'Exportar como CSV',\n                                        exportFunc: (cols, datas) => ExportCsv(cols, datas, 'Mantenimientos')\n                                    }\n                                ],\n                                grouping: true,\n                                filtering: true,\n                                columnsButton: true\n                            }}\n                            editable={{\n                                onRowAdd: newData =>\n                                    new Promise((resolve, reject) => {\n                                        if (newData && Object.keys(newData).length !== 0) {\n                                            newData.active = true;\n                                            if (!newData.discount) {\n                                                newData.discount = 0;\n                                            }\n                                            if (!newData.quantitie) {\n                                                newData.quantitie = 1;\n                                            }\n                                            const _clientes = [...clientes];\n                                            const _estufas = [...estufas];\n                                            const _estufa = _estufas.find(\n                                                (el) => el.id === newData.product\n                                            );\n                                            const _cliente = _clientes.find(\n                                                (el) => el.id === newData.client\n                                            );\n\n                                            if (parseInt(newData.quantitie) <= parseInt(_estufa.stoveAmount)) {\n                                                var globalPrice = (parseInt(_estufa.stoveUnitPrice) * parseInt(newData.quantitie));\n                                                var discountByClient = Math.round(globalPrice * parseInt(_cliente.discount) / 100);\n                                                var discountBySale = Math.round(globalPrice * parseInt(newData.discount) / 100);\n                                                newData.salePrice = globalPrice - discountByClient - discountBySale;\n\n                                                axios.post('/api/ventas', newData)\n                                                    .then(resp => {\n                                                        if (resp.data.ok) {\n                                                            setVentas([\n                                                                resp.data.data,\n                                                                ...ventas,\n                                                            ]);\n                                                        } else {\n                                                            Swal.fire('Error al crear la Venta', resp.data.message, 'error');\n                                                        }\n                                                        resolve();\n                                                    }).catch(error => {\n                                                        console.log(error);\n                                                        Swal.fire('Error al crear la Venta', error?.message, 'error');\n                                                        resolve();\n                                                    });\n                                            } else {\n                                                Swal.fire('Error al crear la Venta', 'La cantidad de Estufas a vender supera el Stock disponible', 'error');\n                                                resolve();\n                                            }\n                                        } else {\n                                            resolve();\n                                        }\n                                    }),\n                                // onRowUpdate: (newData, oldData) =>\n                                //     new Promise((resolve, reject) => {\n                                //         axios.put(`/api/ventas/${newData._id}`, newData)\n                                //             .then(resp => {\n                                //                 if (resp.data.ok) {\n                                //                     const dataUpdate = [...ventas];\n                                //                     const target = dataUpdate.find((el) => el.id === oldData.tableData.id);\n                                //                     const index = dataUpdate.indexOf(target);\n                                //                     dataUpdate[index] = newData;\n                                //                     setVentas([...dataUpdate]);\n                                //                 } else {\n                                //                     Swal.fire('Error al actualizar la Venta', resp.data.message, 'error');\n                                //                 }\n                                //                 resolve();\n                                //             }).catch(error => {\n                                //                 console.log(error);\n                                //                 Swal.fire('Error al actualizar la Venta', error?.message, 'error');\n                                //                 resolve();\n                                //             });\n                                //     }),\n                                onRowDelete: oldData =>\n                                    new Promise((resolve, reject) => {\n                                        oldData.active = false;\n                                        axios.put(`/api/ventas/${oldData._id}`, oldData)\n                                            .then(resp => {\n                                                if (resp.data.ok) {\n                                                    const dataDelete = [...ventas];\n                                                    const target = dataDelete.find((el) => el.id === oldData.tableData.id);\n                                                    const index = dataDelete.indexOf(target);\n                                                    dataDelete.splice(index, 1);\n                                                    setVentas([...dataDelete]);\n                                                } else {\n                                                    Swal.fire('Error al eliminar la Venta', resp.data.message, 'error');\n                                                }\n                                                resolve();\n                                            }).catch(error => {\n                                                console.log(error);\n                                                Swal.fire('Error al eliminar la Venta', error?.message, 'error');\n                                                resolve();\n                                            });\n                                    }),\n                            }}\n                            actions={[\n                                {\n                                    icon: () => <RefreshIcon color={'action'} sx={{ fontSize: 30 }} />,\n                                    tooltip: 'Refrescar Datos',\n                                    isFreeAction: true,\n                                    onClick: () => setActualizar(!actualizar),\n                                },\n                                {\n                                    icon: () => <VisibilityIcon color={'secondary'} />,\n                                    tooltip: 'Detalle',\n                                    onClick: (event, rowData) => {\n                                        const _clientes = [...clientes];\n                                        const _estufas = [...estufas];\n\n                                        const _estufa = _estufas.find(\n                                            (el) => el.id === rowData.product\n                                        );\n\n                                        const _cliente = _clientes.find(\n                                            (el) => el.id === rowData.client\n                                        );\n                                        const _rowData = { ...rowData };\n                                        _rowData[\"client\"] = `${_cliente.firstName} ${_cliente.lastName}`;\n                                        _rowData[\"product\"] = `${_estufa.stoveBrand} ${_estufa.stoveModel}`;\n\n                                        Swal.fire(\n                                            {\n                                                html: `\n              <row>\n                  <h3>Estás visualizando el registro de venta:</h3>\n                  <hr>\n                  <col>\n                          <p><b>Cliente:</b> ${_rowData.client}</p>\n                          <p><b>Producto:</b> ${_rowData.product}</p>\n                          <p><b>Descuento:</b> ${_rowData.discount}</p>\n                          <p><b>Cantidad:</b> ${_rowData.quantitie}</p>\n                          <p><b>Precio de Venta:</b> ${_rowData.salePrice}</p>\n                          <p><b>Método de Pago:</b>${_rowData.paymentMethod}</p>          \n                          <p><b>Observaciones:</b> ${_rowData.observations}</p>\n                  </col>\n              </row>\n              `,\n                                                focusConfirm: false,\n                                                focusCancel: false,\n                                                customClass: {\n                                                    container: \"swal-wide\",\n                                                    popup: \"swal-wide\",\n                                                    header: \"swal-wide\",\n                                                    closeButton: \"swal-wide\",\n                                                    icon: \"swal-wide\",\n                                                    image: \"swal-wide\",\n                                                    content: \"swal-wide\",\n                                                    actions: \"swal-wide\",\n                                                    confirmButton: \"swal-wide\",\n                                                    cancelButton: \"swal-wide\",\n                                                    footer: \"swal-wide\",\n                                                },\n                                                showClass: {\n                                                    popup: \"animated fadeIn faster\",\n                                                    actions: \"animated fadeIn faster\",\n                                                    confirmButton: \"animated zoomIn faster\",\n                                                    cancelButton: \"animated zoomIn faster\",\n                                                },\n                                            },\n                                            JSON.stringify(rowData)\n                                        )\n                                    },\n                                },\n                            ]}\n                        />\n                    </Col>\n                </Row>\n            </Container>\n        </>\n    )\n}\n\nexport default VentasList;","import React from 'react';\nimport { Link, Route, Routes } from 'react-router-dom';\nimport { BsHouseDoor } from \"react-icons/bs\";\nimport { Container, Col, Row } from \"reactstrap\";\nimport { MdFireplace } from 'react-icons/md';\nimport { ImUsers } from \"react-icons/im\";\nimport { RiMoneyDollarCircleLine } from \"react-icons/ri\";\nimport { FiSettings } from \"react-icons/fi\";\nimport Logo from '../home/images/Logo.png';\nimport VentasList from './list';\n\n\nconst VentasAdmin = (props) => {\n\n    return <>\n    <Container fluid className=\"recuadro-nc\">\n        <Row>\n            <Col xs={4} sm={4} md={3} lg={3} className=\"espaciado4 alineacion\">\n            <Link to={`/`}><img src={Logo} width=\"150\" alt='logo'/></Link>\n            </Col>\n            <Col xs={4} sm={4} md={6} lg={6} className=\"espaciado4 alineacion-left\">\n            <h3><RiMoneyDollarCircleLine color=\"green\" style={{ marginRight: '10px', fontSize: '50', textAlign: 'center'}}/>Ventas de Estufas y Pellets</h3>\n            </Col>\n            <Col xs={4} sm={4} md={3} lg={3} className=\"espaciado4 alineacion-right\">\n                <Link to=\"/\"><BsHouseDoor color=\"black\" size={32}  style={{ marginRight: '10px'}} /></Link>\n                <Link to=\"../clientes/\"><ImUsers color=\"blue\" size={32}  style={{ marginRight: '10px'}} /></Link>\n                <Link to=\"../estufas/\"><MdFireplace color=\"red\" size={32}  style={{ marginRight: '10px'}} /></Link>\n                <Link to=\"../mantenciones/\"><FiSettings color=\"gray\" size={32}  style={{ marginRight: '10px'}} /></Link>\n            </Col>\n        </Row>\n        <Row>\n            <Routes>\n                <Route path=\"/\" element={ <VentasList /> } />\n            </Routes>\n        </Row>\n    </Container>\n    </>\n}\n\nexport default VentasAdmin;","import { forwardRef, useCallback, useEffect, useMemo, useState } from \"react\";\n\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\n\nimport MaterialTable from \"@material-table/core\";\nimport { ExportCsv, ExportPdf } from \"@material-table/exporters\";\nimport { Container, Row, Col } from \"reactstrap\";\n\nimport AddBoxIcon from \"@mui/icons-material/AddBox\";\nimport ArrowUpwardIcon from \"@mui/icons-material/ArrowUpward\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport DeleteOutlineIcon from \"@mui/icons-material/DeleteOutline\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\nimport FirstPageIcon from \"@mui/icons-material/FirstPage\";\nimport LastPageIcon from \"@mui/icons-material/LastPage\";\nimport RemoveIcon from \"@mui/icons-material/Remove\";\nimport SaveAltIcon from \"@mui/icons-material/SaveAlt\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport ViewColumnIcon from \"@mui/icons-material/ViewColumn\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport RefreshIcon from \"@mui/icons-material/Refresh\";\nimport { Autocomplete, TextField } from \"@mui/material\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => (\n    <AddBoxIcon {...props} ref={ref} sx={{ fontSize: 30 }} />\n  )),\n  Check: forwardRef((props, ref) => <CheckIcon {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <ClearIcon {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => (\n    <DeleteOutlineIcon {...props} ref={ref} color=\"error\" />\n  )),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRightIcon {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => (\n    <EditIcon {...props} ref={ref} color=\"primary\" />\n  )),\n  Export: forwardRef((props, ref) => <SaveAltIcon {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterListIcon {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPageIcon {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPageIcon {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => (\n    <ChevronRightIcon {...props} ref={ref} />\n  )),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeftIcon {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <ClearIcon {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <SearchIcon {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => (\n    <ArrowUpwardIcon {...props} ref={ref} />\n  )),\n  ThirdStateCheck: forwardRef((props, ref) => (\n    <RemoveIcon {...props} ref={ref} />\n  )),\n  ViewColumn: forwardRef((props, ref) => (\n    <ViewColumnIcon {...props} ref={ref} />\n  )),\n};\n\nlet clookup = {};\nlet elookup = {};\nconst slookup = {\n  Agendado: \"Agendado\",\n  Realizado: \"Realizado\",\n  Cancelado: \"Cancelado\",\n};\nconst status = [\"Agendado\", \"Realizado\", \"Cancelado\"];\n\nconst MantenimientoList = (props) => {\n  const [mantenimientos, setMantenimientos] = useState([]);\n\n  const [actualizar, setActualizar] = useState(false);\n  const [clientes, setClientes] = useState({});\n  const [estufas, setEstufas] = useState({});\n  const [reloadcolum, setReloadcolum] = useState(false);\n\n  useEffect(() => {\n    axios\n      .get(\"/api/clientes\")\n      .then((resp) => {\n        setClientes(resp.data.data);\n        let _lookup = {};\n        resp.data.data.forEach((element) => {\n          _lookup[\n            element._id.toString()\n          ] = `${element.firstName} ${element.lastName}`;\n        });\n        clookup = _lookup;\n\n        axios\n          .get(\"/api/estufas\")\n          .then((resp) => {\n            setEstufas(resp.data.data);\n            _lookup = {};\n            resp.data.data.forEach((element) => {\n              _lookup[\n                element._id.toString()\n              ] = `${element.stoveBrand} ${element.stoveModel}`;\n            });\n            elookup = _lookup;\n            setReloadcolum(!reloadcolum);\n          })\n          .catch((error) => Swal.fire(\"Error\", error.message, \"error\"));\n        //setReloadcolum(!reloadcolum);\n      })\n      .catch((error) => Swal.fire(\"Error\", error.message, \"error\"));\n  }, [actualizar]);\n\n  // useEffect(() => {\n  //     axios.get('/api/estufas')\n  //         .then(resp => {\n  //             setEstufas(resp.data.data);\n  //             let _lookup = {};\n  //             resp.data.data.forEach(element => {\n  //                 _lookup[element._id.toString()] = `${element.stoveBrand} ${element.stoveModel}`;\n  //             });\n  //             elookup = _lookup;\n  //             setReloadcolum(!reloadcolum);\n  //         })\n  //         .catch(error =>\n  //             Swal.fire('Error', error.message, 'error'));\n  // }, [actualizar]);\n\n  const getName = (info) => {\n    if (info.value) {\n      const cliente = clientes.find(\n        (el) => el.id === info.value\n      );\n      return `${cliente.firstName} ${cliente.lastName}`;\n    }\n    return \"\";\n  }\n\n  const getProduct = (info) => {\n    if (info.value) {\n      const estufa = estufas.find(\n        (el) => el.id === info.value\n      );\n      return `${estufa.stoveBrand} ${estufa.stoveModel}`;\n    }\n    return \"\";\n  }\n\n  useEffect(() => {\n    axios\n      .get(\"/api/mantenciones\")\n      .then((resp) => {\n        setMantenimientos(resp.data.data);\n        //setReloadcolum(!reloadcolum);\n      })\n      .catch((error) => {\n        Swal.fire(\"Error\", error.message, \"error\");\n      });\n  }, [actualizar]);\n\n  //     useEffect(() => {\n  //     new Promise((resolve, reject) => {\n  //         axios.get('/api/estufas')\n  //             .then(resp => {\n  //                 console.log(resp.data.data);\n  //                 setClientes(resp.data.data);\n  //                 //console.log('tenemos clientes');\n  //                 let _lookup = {};\n  //                 resp.data.data.forEach(element => {\n  //                     _lookup[element._id.toString()] = `${element.firstName} ${element.lastName}`;\n  //                 });\n  //                 clookup = _lookup;\n  //                 axios.get(\"/api/estufas\")\n  //                     .then((estufas) => {\n  //                         //setEstufas(resp.data.data);\n  //                         _lookup = {};\n  //                         estufas.data.data.forEach(element => {\n  //                             _lookup[element._id.toString()] = element.stoveModel;\n  //                         });\n  //                         plookup = _lookup;\n  //                         axios.get('/api/mantenciones')\n  //                             .then(resp => {\n  //                                 setMantenimientos(resp.data.data);\n  //                                 console.log('tenemos mantenciones');\n  //                                 setReloadcolum(!reloadcolum);\n  //                                 resolve();\n  //                             })\n  //                             .catch(error => {\n  //                                 Swal.fire('Error', error.message, 'error');\n  //                                 resolve();\n  //                             })\n  //                     })\n  //                     .catch((error) => Swal.fire(\"Error\", error.message, \"error\"));\n\n  //             })\n  //             .catch(error => {\n  //                 Swal.fire('Error', error.message, 'error');\n  //                 resolve();\n  //             })\n  //     })\n\n  // }, [actualizar]);\n\n  const columns = useMemo(\n    () => [\n      { title: \"Id\", field: \"_id\", hidden: true, filtering: false },\n      {\n        title: \"Cliente\",\n        field: \"client\",\n        lookup: clookup,\n        editComponent: (props) => (\n          <Autocomplete\n            id=\"client\"\n            options={clientes}\n            getOptionLabel={(option) =>\n              `${option.firstName} ${option.lastName}`\n            }\n            renderInput={(params) => {\n              return (\n                <TextField\n                  {...params}\n                  variant=\"outlined\"\n                  label={getName(props)}\n                  fullWidth\n                />\n              );\n            }}\n            onChange={(e, newValue) => {\n              if (newValue) {\n                props.onChange(newValue._id);\n              }\n            }}\n          />\n        ),\n      },\n      {\n        title: \"Producto\",\n        field: \"product\",\n        lookup: elookup,\n        editComponent: (props) => (\n          <Autocomplete\n            id=\"product\"\n            options={estufas}\n            getOptionLabel={(option) =>\n              `${option.stoveBrand} ${option.stoveModel}`\n            }\n            renderInput={(params) => {\n              return (\n                <TextField\n                  {...params}\n                  variant=\"outlined\"\n                  label={getProduct(props)}\n                  fullWidth\n                />\n              );\n            }}\n            onChange={(e, newValue) => {\n              if (newValue) {\n                props.onChange(newValue._id);\n              }\n            }}\n          />\n        ),\n      },\n      {\n        title: \"Estado\",\n        field: \"maintenanceStatus\",\n        lookup: slookup,\n        editComponent: (props) => (\n          <Autocomplete\n            id=\"maintenanceStatus\"\n            options={status}\n            getOptionLabel={(option) => option}\n            renderInput={(params) => {\n              return (\n                <TextField\n                  {...params}\n                  variant=\"outlined\"\n                  label={props.value}\n                  fullWidth\n                />\n              );\n            }}\n            onChange={(e, newValue) => {\n              if (newValue) {\n                props.onChange(newValue);\n              }\n            }}\n          />\n        ),\n      },\n      {\n        title: \"Técnico\",\n        field: \"technical\",\n        editComponent: (props) => (\n          <TextField\n            id=\"technical\"\n            label=\"Técnico\"\n            variant=\"outlined\"\n            value={props.value}\n            onChange={(e) => props.onChange(e.target.value)}\n          />\n        ),\n      },\n      {\n        title: \"Fecha\",\n        field: \"scheduledDate\",\n        type: \"datetime\",\n      },\n      {\n        title: \"Observaciones\",\n        field: \"observations\",\n        editComponent: (props) => (\n          <TextField\n            id=\"observations\"\n            label=\"Observaciones\"\n            variant=\"outlined\"\n            value={props.value}\n            onChange={(e) => props.onChange(e.target.value)}\n          />\n        ),\n      },\n      { title: \"Activo\", field: \"active\", hidden: true, filtering: false },\n    ],\n    [reloadcolum]\n  );\n\n  return (\n    <>\n      <Container fluid className=\"espaciado\">\n        <Row>\n          <Col>\n            <MaterialTable\n              title=\"\"\n              columns={columns}\n              data={mantenimientos}\n              icons={tableIcons}\n              localization={{\n                toolbar: {\n                  exportTitle: \"Exportar\",\n                  searchTooltip: \"Buscar\",\n                  searchPlaceholder: \"Buscar\",\n                  showColumnsTitle: \"Mostrar Columnas\",\n                },\n                header: {\n                  actions: \"Acciones\",\n                },\n                body: {\n                  addTooltip: \"Crear\",\n                  editTooltip: \"Editar\",\n                  deleteTooltip: \"Eliminar\",\n                  editRow: {\n                    deleteText:\n                      \"Está seguro que desea eliminar el Mantenimiento\",\n                    cancelTooltip: \"Cancelar\",\n                    saveTooltip: \"Aceptar\",\n                  },\n                  emptyDataSourceMessage: \"No hay registros que mostrar\",\n                },\n                pagination: {\n                  labelRowsSelect: \"filas\",\n                  labelDisplayedRows: \"{from}-{to} de {count}\",\n                  labelRowsPerPage: \"Filas por página:\",\n                  firstAriaLabel: \"Primera página\",\n                  firstTooltip: \"Primera página\",\n                  previousAriaLabel: \"Página anterior\",\n                  previousTooltip: \"Página anterior\",\n                  nextAriaLabel: \"Siguiente página\",\n                  nextTooltip: \"Siguiente página\",\n                  lastAriaLabel: \"Última página\",\n                  lastTooltip: \"Última página\",\n                },\n                grouping: {\n                  placeholder: \"Arrastra los encabezados aquí para agruparlos\",\n                  groupedBy: \"Agrupados por: \",\n                },\n              }}\n              options={{\n                addRowPosition: \"first\",\n                searchFieldAlignment: \"left\",\n                exportMenu: [\n                  {\n                    label: \"Exportar como PDF\",\n                    exportFunc: (cols, datas) =>\n                      ExportPdf(cols, datas, \"Mantenimientos\"),\n                  },\n                  {\n                    label: \"Exportar como CSV\",\n                    exportFunc: (cols, datas) =>\n                      ExportCsv(cols, datas, \"Mantenimientos\"),\n                  },\n                ],\n                grouping: true,\n                filtering: true,\n                columnsButton: true,\n              }}\n              editable={{\n                onRowAdd: (newData) =>\n                  new Promise((resolve, reject) => {\n                    if (newData && Object.keys(newData).length !== 0) {\n                      newData.active = true;\n                      axios\n                        .post(\"/api/mantenciones\", newData)\n                        .then((resp) => {\n                          if (resp.data.ok) {\n                            setMantenimientos([\n                              resp.data.data,\n                              ...mantenimientos,\n                            ]);\n                          } else {\n                            Swal.fire(\n                              \"Error al crear el Mantenimiento\",\n                              resp.data.message,\n                              \"error\"\n                            );\n                          }\n                          resolve();\n                        })\n                        .catch((error) => {\n                          console.log(error);\n                          Swal.fire(\n                            \"Error al crear el Mantenimiento\",\n                            error?.message,\n                            \"error\"\n                          );\n                          resolve();\n                        });\n                    } else {\n                      resolve();\n                    }\n                  }),\n                onRowUpdate: (newData, oldData) =>\n                  new Promise((resolve, reject) => {\n                    axios\n                      .put(`/api/mantenciones/${newData._id}`, newData)\n                      .then((resp) => {\n                        if (resp.data.ok) {\n                          const dataUpdate = [...mantenimientos];\n                          const target = dataUpdate.find(\n                            (el) => el.id === oldData.tableData.id\n                          );\n                          const index = dataUpdate.indexOf(target);\n                          dataUpdate[index] = newData;\n                          setMantenimientos([...dataUpdate]);\n                        } else {\n                          Swal.fire(\n                            \"Error al actualizar el Mantenimiento\",\n                            resp.data.message,\n                            \"error\"\n                          );\n                        }\n                        resolve();\n                      })\n                      .catch((error) => {\n                        console.log(error);\n                        Swal.fire(\n                          \"Error al actualizar el Mantenimiento\",\n                          error?.message,\n                          \"error\"\n                        );\n                        resolve();\n                      });\n                  }),\n                onRowDelete: (oldData) =>\n                  new Promise((resolve, reject) => {\n                    oldData.active = false;\n                    axios\n                      .put(`/api/mantenciones/${oldData._id}`, oldData)\n                      .then((resp) => {\n                        if (resp.data.ok) {\n                          const dataDelete = [...mantenimientos];\n                          const target = dataDelete.find(\n                            (el) => el.id === oldData.tableData.id\n                          );\n                          const index = dataDelete.indexOf(target);\n                          dataDelete.splice(index, 1);\n                          setMantenimientos([...dataDelete]);\n                        } else {\n                          Swal.fire(\n                            \"Error al eliminar el Mantenimiento\",\n                            resp.data.message,\n                            \"error\"\n                          );\n                        }\n                        resolve();\n                      })\n                      .catch((error) => {\n                        console.log(error);\n                        Swal.fire(\n                          \"Error al eliminar el Mantenimiento\",\n                          error?.message,\n                          \"error\"\n                        );\n                        resolve();\n                      });\n                  }),\n              }}\n              actions={[\n                {\n                  icon: () => (\n                    <RefreshIcon color={\"action\"} sx={{ fontSize: 30 }} />\n                  ),\n                  tooltip: \"Refrescar Datos\",\n                  isFreeAction: true,\n                  onClick: () => setActualizar(!actualizar),\n                },\n                {\n                  icon: () => <VisibilityIcon color={\"secondary\"} />,\n                  tooltip: \"Detalle\",\n                  onClick: (event, rowData) => {\n                    const _clientes = [...clientes];\n                    const _estufas = [...estufas];\n                    \n                    const _estufa = _estufas.find(\n                        (el) => el.id === rowData.product\n                      );\n\n                    const _cliente = _clientes.find(\n                      (el) => el.id === rowData.client\n                    );\n                    const _rowData = { ...rowData };\n                    _rowData[\"client\"] = `${_cliente.firstName} ${_cliente.lastName}`;\n                    _rowData[\"product\"] = `${_estufa.stoveBrand} ${_estufa.stoveModel}`;\n                    Swal.fire(\n                      {\n                        html: `\n                  <row>\n                      <h3>Estás visualizando Instalación y Mantención de:</h3>\n                      <hr>\n                      <col>\n                              <p><b>Cliente:</b> ${_rowData.client}</p>\n                              <p><b>Producto:</b> ${_rowData.product}</p>\n                              <p><b>Estado:</b> ${_rowData.maintenanceStatus}</p>\n                              <p><b>Técnico:</b> ${_rowData.technical}</p>\n                              <p><b>Fecha:</b> ${_rowData.scheduledDate}</p>\n                              <p><b>Observaciones:</b> ${_rowData.observations}</p>\n                      </col>\n                  </row>\n                  `,\n                        focusConfirm: false,\n                        focusCancel: false,\n                        customClass: {\n                          container: \"swal-wide\",\n                          popup: \"swal-wide\",\n                          header: \"swal-wide\",\n                          closeButton: \"swal-wide\",\n                          icon: \"swal-wide\",\n                          image: \"swal-wide\",\n                          content: \"swal-wide\",\n                          actions: \"swal-wide\",\n                          confirmButton: \"swal-wide\",\n                          cancelButton: \"swal-wide\",\n                          footer: \"swal-wide\",\n                        },\n                        showClass: {\n                          popup: \"animated fadeIn faster\",\n                          actions: \"animated fadeIn faster\",\n                          confirmButton: \"animated zoomIn faster\",\n                          cancelButton: \"animated zoomIn faster\",\n                        },\n                      },\n                      JSON.stringify(_rowData)\n                    );\n                  },\n                },\n              ]}\n            />\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default MantenimientoList;\n","import React from 'react';\nimport { Link, Route, Routes } from 'react-router-dom';\nimport { BsHouseDoor } from \"react-icons/bs\";\nimport { Container, Col, Row } from \"reactstrap\";\nimport { MdFireplace } from 'react-icons/md';\nimport { ImUsers } from \"react-icons/im\";\nimport { RiMoneyDollarCircleLine } from \"react-icons/ri\";\nimport { FiSettings } from \"react-icons/fi\";\nimport Logo from '../home/images/Logo.png';\nimport MantenimientoList from './list';\n\n\nconst MantenimientosAdmin = (props) => {\n\n    return <>\n    <Container fluid className=\"recuadro-nc\">\n        <Row>\n            <Col xs={4} sm={4} md={3} lg={3} className=\"espaciado4 alineacion\">\n            <Link to={`/`}><img src={Logo} width=\"150\" alt='logo'/></Link>\n            </Col>\n            <Col xs={4} sm={4} md={6} lg={6} className=\"espaciado4 alineacion-left\">\n            <h3><FiSettings color=\"grey\" style={{ marginRight: '10px', fontSize: '50', textAlign: 'center'}}/>Instalación y Mantenciones</h3>\n            </Col>\n            <Col xs={4} sm={4} md={3} lg={3} className=\"espaciado4 alineacion-right\">\n                <Link to=\"/\"><BsHouseDoor color=\"black\" size={32}  style={{ marginRight: '10px'}} /></Link>\n                <Link to=\"../clientes/\"><ImUsers color=\"blue\" size={32}  style={{ marginRight: '10px'}} /></Link>\n                <Link to=\"../estufas/\"><MdFireplace color=\"red\" size={32}  style={{ marginRight: '10px'}} /></Link>\n                <Link to=\"../ventas/\"><RiMoneyDollarCircleLine color=\"green\" size={32}  style={{ marginRight: '10px'}} /></Link>\n            </Col>\n        </Row>\n        <Row>\n            <Routes>\n                <Route path=\"/\" element={ <MantenimientoList /> } />\n            </Routes>\n        </Row>\n    </Container>\n    </>\n}\n\nexport default MantenimientosAdmin;","import { useEffect, useState } from \"react\";\r\nimport { Route, Routes, useNavigate } from \"react-router\";\r\nimport UserContext from \"../context/user-context\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport Main from \"../login/main\";\r\nimport ClienteDashboard from \"./dashboard\";\r\nimport ClientesAdmin from '../clientes/admin';\r\nimport LoginForm from \"../login/login\";\r\nimport RegisterForm from \"../login/register\";\r\nimport ClienteFooter from \"./footer\";\r\nimport ClienteTop from \"./topheader\";\r\nimport EstufaAdmin from \"../estufas/admin\";\r\nimport VentasAdmin from \"../ventas/admin\";\r\nimport MantenimientoAdmin from \"../mantenimientos/admin\";\r\n\r\n\r\nconst Home = (props) => {\r\n    const SESSION_USER = 'SESSION_USER';\r\n\r\n    const [user, setUser] = useState(null);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const login = (inputs) => {\r\n        axios.post('/api/login', inputs)\r\n            .then(resp => {\r\n                if (resp.data.ok) {\r\n                    setUser(resp.data.data);\r\n                    sessionStorage.setItem(SESSION_USER, JSON.stringify(resp.data.data));\r\n                    Swal.fire(\"Login\", resp.data.message, \"success\");\r\n                    navigate('/');\r\n                } else {\r\n                    Swal.fire('Login', resp.data.message, 'error');\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const logout = () => {\r\n        setUser(null);\r\n        sessionStorage.clear();\r\n        navigate('/auth');\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (sessionStorage.getItem(SESSION_USER)) {\r\n            setUser(JSON.parse(sessionStorage.getItem(SESSION_USER)));\r\n            navigate('/');\r\n        } else {\r\n            navigate('/auth');\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <UserContext.Provider value={{ user, setUser, login, logout }}>\r\n            <ClienteTop />\r\n            <Routes>\r\n            <Route path=\"/auth\" element={<Main />} />\r\n            <Route path=\"/*\" element={<ClienteDashboard />} />\r\n            <Route path=\"/login\" element={<LoginForm />}/>\r\n            <Route path=\"/register\" element={<RegisterForm />}/>\r\n            <Route path=\"/clientes/*\" element={<ClientesAdmin />} />\r\n            <Route path=\"/estufas/*\" element={<EstufaAdmin />} />\r\n            <Route path=\"/ventas/*\" element={<VentasAdmin />} />\r\n            <Route path=\"/mantenciones/*\" element={<MantenimientoAdmin />} />\r\n            </Routes>\r\n            <ClienteFooter/>\r\n        </UserContext.Provider>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import { BrowserRouter, Routes, Route} from \"react-router-dom\";\nimport { Container } from 'reactstrap';\nimport Home from './components/home/home'\n\n\nimport './App.css';\n\nfunction App() {\n  return (\n     <Container fluid className=\"Fondo\">\n      \n        <BrowserRouter>\n          <Routes>\n            <Route path=\"/*\" element={<Home />} />         \n          </Routes>\n        </BrowserRouter>\n\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}